{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","className","map","tab","isSelected","id","classNames","href","onClick","title","content","App","useState","setSelectedTabId","find","tabId","ReactDOM","render","document","getElementById"],"mappings":"kNAWaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GACR,IAAMC,EAAaN,IAAkBK,EAAIE,GAEzC,OACE,oBACEJ,UAAWK,IACT,CAAE,YAAaF,IAEjB,UAAQ,MAJV,SAOE,mBACEG,KAAI,WAAMJ,EAAIE,IACd,UAAQ,UACRG,QAAS,WACPT,EAAcI,EAAIE,KAJtB,SAOGF,EAAIM,SATFN,EAAIE,WAiBnB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYU,cCzCRb,EAAO,CAClB,CAAEQ,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOd,EAAP,KAAsBe,EAAtB,KACMb,EAAmBH,EAAKiB,MAAK,SAAAX,GAAG,OACpCA,EAAIE,KAAOP,MACPD,EAAK,GAUX,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAYS,SAGlC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAjBiB,SAACgB,GAKtB,OAJIjB,IAAkBiB,GACpBF,EAAiBE,GAGZjB,GAaHE,YAAaA,QClCrBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ee1e9687.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tabId: string) => void,\n  selectedTab: Tab,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n  selectedTab,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isSelected = selectedTabId === tab.id;\n\n            return (\n              <li\n                className={classNames(\n                  { 'is-active': isSelected },\n                )}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    onTabSelected(tab.id);\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n  const selectedTab: Tab = tabs.find(tab => (\n    tab.id === selectedTabId\n  )) || tabs[0];\n\n  const handleClickTab = (tabId: string) => {\n    if (selectedTabId !== tabId) {\n      setSelectedTabId(tabId);\n    }\n\n    return selectedTabId;\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleClickTab}\n        selectedTab={selectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}